// {
//   "name": "component-iconic-richtext-twinkling.js",
//   "author": "Arham Web Works"
//   "description": "Copying in any form is strictly prohibited. Any instance of copying will be subject to legal action and accountability under the law."
// }

// Reinitialize on Shopify section reload
document.addEventListener('shopify:section:load', () => {
  setTimeout(() => initializeShootingStarsForAllSections(), 600); // Small delay after section reload
});

// Initialize all shooting stars and star fields for canvases
function initializeShootingStarsForAllSections() {
  // Select all canvas elements with the class 'starCanvas'
  const canvases = document.querySelectorAll('.starCanvas');
  console.log(`Found ${canvases.length} canvas elements`);

  if (canvases.length === 0) {
    console.error('No canvases found with the class "starCanvas". Exiting initialization.');
    return; // Exit if no canvases are found
  }

  canvases.forEach((canvas, index) => {
    const canvasId = `starCanvas${index}`;
    canvas.id = canvasId; // Assign each canvas a unique ID
    console.log(`Canvas ID assigned: ${canvasId}`);

    // Ensure the canvas has dimensions
    if (!canvas.width || !canvas.height) {
      canvas.width = canvas.clientWidth || 300; // Set default width if missing
      canvas.height = canvas.clientHeight || 150; // Set default height if missing
      console.log(`Canvas dimensions set: ${canvas.width}x${canvas.height}`);
    }

    // Initialize Starfield for each canvas
    if (window.Starfield) {
      const starfield = new window.Starfield(canvasId);
      console.log(`Starfield initialized for canvas: ${canvasId}`);
    } else {
      console.error('Starfield class not found. Ensure the library is loaded correctly.');
    }

    // Initialize ShootingStar for each canvas' parent container
    const parentElement = canvas.parentElement;
    if (window.ShootingStar) {
      const shootingStarObj = new window.ShootingStar(parentElement);
      shootingStarObj.launch(5 + index); // Adjust timing for each section
      console.log(`ShootingStar launched for parent element:`, parentElement);
    } else {
      console.error('ShootingStar class not found. Ensure the library is loaded correctly.');
    }
  });
}

// Optionally, use a MutationObserver to detect dynamically added canvases
const observer = new MutationObserver(() => {
  initializeShootingStarsForAllSections();
});

observer.observe(document.body, { childList: true, subtree: true });